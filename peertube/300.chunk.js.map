{"version":3,"file":"300.chunk.js?v=1517","mappings":"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","sources":["webpack://peertube-client/./node_modules/engine.io-parser/build/esm/commons.js","webpack://peertube-client/./node_modules/engine.io-parser/build/esm/encodePacket.browser.js","webpack://peertube-client/./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","webpack://peertube-client/./node_modules/engine.io-parser/build/esm/decodePacket.browser.js","webpack://peertube-client/./node_modules/engine.io-parser/build/esm/index.js","webpack://peertube-client/./node_modules/@socket.io/component-emitter/index.mjs","webpack://peertube-client/./node_modules/engine.io-client/build/esm/globalThis.browser.js","webpack://peertube-client/./node_modules/engine.io-client/build/esm/util.js","webpack://peertube-client/./node_modules/engine.io-client/build/esm/transport.js","webpack://peertube-client/./node_modules/engine.io-client/build/esm/contrib/yeast.js","webpack://peertube-client/./node_modules/engine.io-client/build/esm/contrib/parseqs.js","webpack://peertube-client/./node_modules/engine.io-client/build/esm/contrib/has-cors.js","webpack://peertube-client/./node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","webpack://peertube-client/./node_modules/engine.io-client/build/esm/transports/polling.js","webpack://peertube-client/./node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","webpack://peertube-client/./node_modules/engine.io-client/build/esm/transports/websocket.js","webpack://peertube-client/./node_modules/engine.io-client/build/esm/transports/index.js","webpack://peertube-client/./node_modules/engine.io-client/build/esm/contrib/parseuri.js","webpack://peertube-client/./node_modules/engine.io-client/build/esm/socket.js","webpack://peertube-client/./node_modules/socket.io-parser/build/esm/is-binary.js","webpack://peertube-client/./node_modules/socket.io-parser/build/esm/binary.js","webpack://peertube-client/./node_modules/socket.io-parser/build/esm/index.js","webpack://peertube-client/./node_modules/socket.io-client/build/esm/on.js","webpack://peertube-client/./node_modules/socket.io-client/build/esm/socket.js","webpack://peertube-client/./node_modules/socket.io-client/build/esm/contrib/backo2.js","webpack://peertube-client/./node_modules/socket.io-client/build/esm/manager.js","webpack://peertube-client/./node_modules/socket.io-client/build/esm/index.js","webpack://peertube-client/./node_modules/socket.io-client/build/esm/url.js"],"sourcesContent":["const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = closeEvent => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent\n        });\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\"\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", reason => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.connected = false;\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * ```\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     * ```\n     *\n     * @returns self\n     * @public\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * const handler = (event, ...args) => {\n     *   console.log(event);\n     * }\n     *\n     * socket.onAnyOutgoing(handler);\n     *\n     * // then later\n     * socket.offAnyOutgoing(handler);\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        this.decoder.add(data);\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n"],"names":["PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","key","ERROR_PACKET","type","data","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","encodeBlobAsBase64","callback","fileReader","FileReader","onload","content","result","split","readAsDataURL","supportsBinary","obj","isView","buffer","chars","lookup","Uint8Array","i","length","charCodeAt","decodeBase64Packet","binaryType","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","mapBinary","encodedPacket","charAt","substring","SEPARATOR","String","fromCharCode","Emitter","mixin","on","addEventListener","event","fn","this","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emitReserved","emit","args","Array","slice","listeners","hasListeners","globalThisShim","self","window","Function","pick","attr","reduce","acc","k","hasOwnProperty","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","globalThis","clearTimeoutFn","TransportError","reason","description","context","Error","Transport","writable","query","readyState","socket","doOpen","doClose","onClose","packets","write","packet","decodePacket","onPacket","details","alphabet","map","prev","seed","encode","num","encoded","Math","floor","yeast","now","Date","str","encodeURIComponent","qs","qry","pairs","l","pair","decodeURIComponent","value","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","join","empty","hasXHR2","responseType","Polling","polling","location","isSSL","protocol","port","xd","hostname","xs","secure","forceBase64","poll","onPause","pause","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","onOpen","close","count","encodePacket","encodePayload","doWrite","schema","timestampRequests","timestampParam","sid","b64","Number","encodedQuery","indexOf","path","assign","Request","uri","req","request","method","xhrStatus","onError","onData","pollXhr","async","undefined","xscheme","xhr","open","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","send","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","unloadHandler","attachEvent","nextTick","Promise","resolve","then","WebSocket","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","transports","websocket","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","names","substr","queryKey","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","transport","offlineEventListener","name","EIO","priorWebsocketSuccess","createTransport","shift","setTransport","onDrain","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","probe","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","payloadSize","c","utf8Length","ceil","byteLength","size","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","j","withNativeFile","File","isBinary","hasBinary","toJSON","isArray","deconstructPacket","buffers","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","BINARY_EVENT","BINARY_ACK","encodeAsBinary","nsp","stringify","deconstruction","unshift","Decoder","reviver","reconstructor","decodeString","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","isPayloadValid","finishedReconstruction","CONNECT","DISCONNECT","CONNECT_ERROR","reconPack","binData","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","receiveBuffer","sendBuffer","ids","acks","flags","auth","_autoConnect","subs","onpacket","subEvents","_readyState","ack","pop","_registerAckCallback","isTransportWritable","engine","discardPacket","volatile","notifyOutgoingListeners","timer","_packet","onconnect","onevent","onack","ondisconnect","destroy","message","emitEvent","_anyListeners","listener","sent","emitBuffered","subDestroy","_anyOutgoingListeners","Backoff","ms","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","_a","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","maybeReconnectOnOpen","onping","ondata","ondecoded","add","active","_close","delay","onreconnect","attempt","cache","parsed","loc","test","href","url","forceNew","multiplex"],"sourceRoot":""}