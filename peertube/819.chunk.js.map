{"version":3,"file":"819.chunk.js?v=1517","mappings":"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","sources":["webpack://peertube-client/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://peertube-client/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://peertube-client/./node_modules/@videojs/vhs-utils/es/stream.js","webpack://peertube-client/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://peertube-client/./node_modules/@videojs/vhs-utils/es/decode-b64-to-uint8-array.js","webpack://peertube-client/./node_modules/m3u8-parser/dist/m3u8-parser.es.js","webpack://peertube-client/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://peertube-client/./node_modules/p2p-media-loader-hlsjs-basyton/dist/byte-range.js","webpack://peertube-client/./node_modules/p2p-media-loader-hlsjs-basyton/dist/engine.js","webpack://peertube-client/./node_modules/p2p-media-loader-hlsjs-basyton/dist/hlsjs-loader.js","webpack://peertube-client/./node_modules/p2p-media-loader-hlsjs-basyton/dist/index.js","webpack://peertube-client/./node_modules/p2p-media-loader-hlsjs-basyton/dist/segment-manager.js"],"sourcesContent":["export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","/**\n * @file stream.js\n */\n\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = /*#__PURE__*/function () {\n  function Stream() {\n    this.listeners = {};\n  }\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  var _proto = Stream.prototype;\n\n  _proto.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n\n    this.listeners[type].push(listener);\n  }\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {boolean} if we could turn it off or not\n   */\n  ;\n\n  _proto.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener); // TODO: which is better?\n    // In Video.js we slice listener functions\n    // on trigger so that it does not mess up the order\n    // while we loop through.\n    //\n    // Here we slice on off so that the loop in trigger\n    // can continue using it's old reference to loop without\n    // messing up the order.\n\n    this.listeners[type] = this.listeners[type].slice(0);\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  }\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {string} type the event name\n   */\n  ;\n\n  _proto.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n\n    if (!callbacks) {\n      return;\n    } // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n\n\n    if (arguments.length === 2) {\n      var length = callbacks.length;\n\n      for (var i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var _length = callbacks.length;\n\n      for (var _i = 0; _i < _length; ++_i) {\n        callbacks[_i].apply(this, args);\n      }\n    }\n  }\n  /**\n   * Destroys the stream and cleans up.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.listeners = {};\n  }\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n  ;\n\n  _proto.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\nexport { Stream as default };","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","import window from 'global/window';\n\nvar atob = function atob(s) {\n  return window.atob ? window.atob(s) : Buffer.from(s, 'base64').toString('binary');\n};\n\nexport default function decodeB64ToUint8Array(b64Text) {\n  var decodedString = atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n\n  return array;\n}","/*! @name m3u8-parser @version 4.7.1 @license Apache-2.0 */\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport Stream from '@videojs/vhs-utils/es/stream.js';\nimport _extends from '@babel/runtime/helpers/extends';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport decodeB64ToUint8Array from '@videojs/vhs-utils/es/decode-b64-to-uint8-array.js';\n\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\n\nvar LineStream = /*#__PURE__*/function (_Stream) {\n  _inheritsLoose(LineStream, _Stream);\n\n  function LineStream() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.buffer = '';\n    return _this;\n  }\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {string} data the text to process\n   */\n\n\n  var _proto = LineStream.prototype;\n\n  _proto.push = function push(data) {\n    var nextNewline;\n    this.buffer += data;\n    nextNewline = this.buffer.indexOf('\\n');\n\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n      this.trigger('data', this.buffer.substring(0, nextNewline));\n      this.buffer = this.buffer.substring(nextNewline + 1);\n    }\n  };\n\n  return LineStream;\n}(Stream);\n\nvar TAB = String.fromCharCode(0x09);\n\nvar parseByterange = function parseByterange(byterangeString) {\n  // optionally match and capture 0+ digits before `@`\n  // optionally match and capture 0+ digits after `@`\n  var match = /([0-9.]*)?@?([0-9.]*)?/.exec(byterangeString || '');\n  var result = {};\n\n  if (match[1]) {\n    result.length = parseInt(match[1], 10);\n  }\n\n  if (match[2]) {\n    result.offset = parseInt(match[2], 10);\n  }\n\n  return result;\n};\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\n\n\nvar attributeSeparator = function attributeSeparator() {\n  var key = '[^=]*';\n  var value = '\"[^\"]*\"|[^,]*';\n  var keyvalue = '(?:' + key + ')=(?:' + value + ')';\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n/**\n * Parse attributes from a line given the separator\n *\n * @param {string} attributes the attribute line to parse\n */\n\n\nvar parseAttributes = function parseAttributes(attributes) {\n  // split the string using attributes as the separator\n  var attrs = attributes.split(attributeSeparator());\n  var result = {};\n  var i = attrs.length;\n  var attr;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    } // split the key and value\n\n\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\n\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n\n  return result;\n};\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\n\nvar ParseStream = /*#__PURE__*/function (_Stream) {\n  _inheritsLoose(ParseStream, _Stream);\n\n  function ParseStream() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.customParsers = [];\n    _this.tagMappers = [];\n    return _this;\n  }\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {string} line a single line of an M3U8 file to parse\n   */\n\n\n  var _proto = ParseStream.prototype;\n\n  _proto.push = function push(line) {\n    var _this2 = this;\n\n    var match;\n    var event; // strip whitespace\n\n    line = line.trim();\n\n    if (line.length === 0) {\n      // ignore empty lines\n      return;\n    } // URIs\n\n\n    if (line[0] !== '#') {\n      this.trigger('data', {\n        type: 'uri',\n        uri: line\n      });\n      return;\n    } // map tags\n\n\n    var newLines = this.tagMappers.reduce(function (acc, mapper) {\n      var mappedLine = mapper(line); // skip if unchanged\n\n      if (mappedLine === line) {\n        return acc;\n      }\n\n      return acc.concat([mappedLine]);\n    }, [line]);\n    newLines.forEach(function (newLine) {\n      for (var i = 0; i < _this2.customParsers.length; i++) {\n        if (_this2.customParsers[i].call(_this2, newLine)) {\n          return;\n        }\n      } // Comments\n\n\n      if (newLine.indexOf('#EXT') !== 0) {\n        _this2.trigger('data', {\n          type: 'comment',\n          text: newLine.slice(1)\n        });\n\n        return;\n      } // strip off any carriage returns here so the regex matching\n      // doesn't have to account for them.\n\n\n      newLine = newLine.replace('\\r', ''); // Tags\n\n      match = /^#EXTM3U/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'm3u'\n        });\n\n        return;\n      }\n\n      match = /^#EXTINF:?([0-9\\.]*)?,?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'inf'\n        };\n\n        if (match[1]) {\n          event.duration = parseFloat(match[1]);\n        }\n\n        if (match[2]) {\n          event.title = match[2];\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'targetduration'\n        };\n\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'version'\n        };\n\n        if (match[1]) {\n          event.version = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'discontinuity-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'playlist-type'\n        };\n\n        if (match[1]) {\n          event.playlistType = match[1];\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-BYTERANGE:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = _extends(parseByterange(match[1]), {\n          type: 'tag',\n          tagType: 'byterange'\n        });\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'allow-cache'\n        };\n\n        if (match[1]) {\n          event.allowed = !/NO/.test(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MAP:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'map'\n        };\n\n        if (match[1]) {\n          var attributes = parseAttributes(match[1]);\n\n          if (attributes.URI) {\n            event.uri = attributes.URI;\n          }\n\n          if (attributes.BYTERANGE) {\n            event.byterange = parseByterange(attributes.BYTERANGE);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-STREAM-INF:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'stream-inf'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n\n          if (event.attributes.RESOLUTION) {\n            var split = event.attributes.RESOLUTION.split('x');\n            var resolution = {};\n\n            if (split[0]) {\n              resolution.width = parseInt(split[0], 10);\n            }\n\n            if (split[1]) {\n              resolution.height = parseInt(split[1], 10);\n            }\n\n            event.attributes.RESOLUTION = resolution;\n          }\n\n          if (event.attributes.BANDWIDTH) {\n            event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n          }\n\n          if (event.attributes['PROGRAM-ID']) {\n            event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-ENDLIST/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'endlist'\n        });\n\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'discontinuity'\n        });\n\n        return;\n      }\n\n      match = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'program-date-time'\n        };\n\n        if (match[1]) {\n          event.dateTimeString = match[1];\n          event.dateTimeObject = new Date(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-KEY:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'key'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]); // parse the IV string into a Uint32Array\n\n          if (event.attributes.IV) {\n            if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n              event.attributes.IV = event.attributes.IV.substring(2);\n            }\n\n            event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n            event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n            event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n            event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n            event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n            event.attributes.IV = new Uint32Array(event.attributes.IV);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-START:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'start'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n          event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n          event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out-cont'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-in'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-SKIP:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'skip'\n        };\n        event.attributes = parseAttributes(match[1]);\n\n        if (event.attributes.hasOwnProperty('SKIPPED-SEGMENTS')) {\n          event.attributes['SKIPPED-SEGMENTS'] = parseInt(event.attributes['SKIPPED-SEGMENTS'], 10);\n        }\n\n        if (event.attributes.hasOwnProperty('RECENTLY-REMOVED-DATERANGES')) {\n          event.attributes['RECENTLY-REMOVED-DATERANGES'] = event.attributes['RECENTLY-REMOVED-DATERANGES'].split(TAB);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PART:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['DURATION'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['INDEPENDENT', 'GAP'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n\n        if (event.attributes.hasOwnProperty('BYTERANGE')) {\n          event.attributes.byterange = parseByterange(event.attributes.BYTERANGE);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-SERVER-CONTROL:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'server-control'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['CAN-SKIP-UNTIL', 'PART-HOLD-BACK', 'HOLD-BACK'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['CAN-SKIP-DATERANGES', 'CAN-BLOCK-RELOAD'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PART-INF:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part-inf'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['PART-TARGET'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PRELOAD-HINT:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'preload-hint'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['BYTERANGE-START', 'BYTERANGE-LENGTH'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n            var subkey = key === 'BYTERANGE-LENGTH' ? 'length' : 'offset';\n            event.attributes.byterange = event.attributes.byterange || {};\n            event.attributes.byterange[subkey] = event.attributes[key]; // only keep the parsed byterange object.\n\n            delete event.attributes[key];\n          }\n        });\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-RENDITION-REPORT:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'rendition-report'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['LAST-MSN', 'LAST-PART'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n          }\n        });\n\n        _this2.trigger('data', event);\n\n        return;\n      } // unknown tag type\n\n\n      _this2.trigger('data', {\n        type: 'tag',\n        data: newLine.slice(4)\n      });\n    });\n  }\n  /**\n   * Add a parser for custom headers\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n  ;\n\n  _proto.addParser = function addParser(_ref) {\n    var _this3 = this;\n\n    var expression = _ref.expression,\n        customType = _ref.customType,\n        dataParser = _ref.dataParser,\n        segment = _ref.segment;\n\n    if (typeof dataParser !== 'function') {\n      dataParser = function dataParser(line) {\n        return line;\n      };\n    }\n\n    this.customParsers.push(function (line) {\n      var match = expression.exec(line);\n\n      if (match) {\n        _this3.trigger('data', {\n          type: 'custom',\n          data: dataParser(line),\n          customType: customType,\n          segment: segment\n        });\n\n        return true;\n      }\n    });\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n  ;\n\n  _proto.addTagMapper = function addTagMapper(_ref2) {\n    var expression = _ref2.expression,\n        map = _ref2.map;\n\n    var mapFn = function mapFn(line) {\n      if (expression.test(line)) {\n        return map(line);\n      }\n\n      return line;\n    };\n\n    this.tagMappers.push(mapFn);\n  };\n\n  return ParseStream;\n}(Stream);\n\nvar camelCase = function camelCase(str) {\n  return str.toLowerCase().replace(/-(\\w)/g, function (a) {\n    return a[1].toUpperCase();\n  });\n};\n\nvar camelCaseKeys = function camelCaseKeys(attributes) {\n  var result = {};\n  Object.keys(attributes).forEach(function (key) {\n    result[camelCase(key)] = attributes[key];\n  });\n  return result;\n}; // set SERVER-CONTROL hold back based upon targetDuration and partTargetDuration\n// we need this helper because defaults are based upon targetDuration and\n// partTargetDuration being set, but they may not be if SERVER-CONTROL appears before\n// target durations are set.\n\n\nvar setHoldBack = function setHoldBack(manifest) {\n  var serverControl = manifest.serverControl,\n      targetDuration = manifest.targetDuration,\n      partTargetDuration = manifest.partTargetDuration;\n\n  if (!serverControl) {\n    return;\n  }\n\n  var tag = '#EXT-X-SERVER-CONTROL';\n  var hb = 'holdBack';\n  var phb = 'partHoldBack';\n  var minTargetDuration = targetDuration && targetDuration * 3;\n  var minPartDuration = partTargetDuration && partTargetDuration * 2;\n\n  if (targetDuration && !serverControl.hasOwnProperty(hb)) {\n    serverControl[hb] = minTargetDuration;\n    this.trigger('info', {\n      message: tag + \" defaulting HOLD-BACK to targetDuration * 3 (\" + minTargetDuration + \").\"\n    });\n  }\n\n  if (minTargetDuration && serverControl[hb] < minTargetDuration) {\n    this.trigger('warn', {\n      message: tag + \" clamping HOLD-BACK (\" + serverControl[hb] + \") to targetDuration * 3 (\" + minTargetDuration + \")\"\n    });\n    serverControl[hb] = minTargetDuration;\n  } // default no part hold back to part target duration * 3\n\n\n  if (partTargetDuration && !serverControl.hasOwnProperty(phb)) {\n    serverControl[phb] = partTargetDuration * 3;\n    this.trigger('info', {\n      message: tag + \" defaulting PART-HOLD-BACK to partTargetDuration * 3 (\" + serverControl[phb] + \").\"\n    });\n  } // if part hold back is too small default it to part target duration * 2\n\n\n  if (partTargetDuration && serverControl[phb] < minPartDuration) {\n    this.trigger('warn', {\n      message: tag + \" clamping PART-HOLD-BACK (\" + serverControl[phb] + \") to partTargetDuration * 2 (\" + minPartDuration + \").\"\n    });\n    serverControl[phb] = minPartDuration;\n  }\n};\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\n\n\nvar Parser = /*#__PURE__*/function (_Stream) {\n  _inheritsLoose(Parser, _Stream);\n\n  function Parser() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.lineStream = new LineStream();\n    _this.parseStream = new ParseStream();\n\n    _this.lineStream.pipe(_this.parseStream);\n    /* eslint-disable consistent-this */\n\n\n    var self = _assertThisInitialized(_this);\n    /* eslint-enable consistent-this */\n\n\n    var uris = [];\n    var currentUri = {}; // if specified, the active EXT-X-MAP definition\n\n    var currentMap; // if specified, the active decryption key\n\n    var _key;\n\n    var hasParts = false;\n\n    var noop = function noop() {};\n\n    var defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    }; // This is the Widevine UUID from DASH IF IOP. The same exact string is\n    // used in MPDs with Widevine encrypted streams.\n\n    var widevineUuid = 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed'; // group segments into numbered timelines delineated by discontinuities\n\n    var currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\n\n    _this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: []\n    }; // keep track of the last seen segment's byte range end, as segments are not required\n    // to provide the offset, in which case it defaults to the next byte after the\n    // previous segment\n\n    var lastByterangeEnd = 0; // keep track of the last seen part's byte range end.\n\n    var lastPartByterangeEnd = 0;\n\n    _this.on('end', function () {\n      // only add preloadSegment if we don't yet have a uri for it.\n      // and we actually have parts/preloadHints\n      if (currentUri.uri || !currentUri.parts && !currentUri.preloadHints) {\n        return;\n      }\n\n      if (!currentUri.map && currentMap) {\n        currentUri.map = currentMap;\n      }\n\n      if (!currentUri.key && _key) {\n        currentUri.key = _key;\n      }\n\n      if (!currentUri.timeline && typeof currentTimeline === 'number') {\n        currentUri.timeline = currentTimeline;\n      }\n\n      _this.manifest.preloadSegment = currentUri;\n    }); // update the manifest with the m3u8 entry from the parse stream\n\n\n    _this.parseStream.on('data', function (entry) {\n      var mediaGroup;\n      var rendition;\n      ({\n        tag: function tag() {\n          // switch based on the tag type\n          (({\n            version: function version() {\n              if (entry.version) {\n                this.manifest.version = entry.version;\n              }\n            },\n            'allow-cache': function allowCache() {\n              this.manifest.allowCache = entry.allowed;\n\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n            byterange: function byterange() {\n              var byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  /*\n                   * From the latest spec (as of this writing):\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.2\n                   *\n                   * Same text since EXT-X-BYTERANGE's introduction in draft 7:\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-07#section-3.3.1)\n                   *\n                   * \"If o [offset] is not present, the sub-range begins at the next byte\n                   * following the sub-range of the previous media segment.\"\n                   */\n                  entry.offset = lastByterangeEnd;\n                }\n              }\n\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n\n              lastByterangeEnd = byterange.offset + byterange.length;\n            },\n            endlist: function endlist() {\n              this.manifest.endList = true;\n            },\n            inf: function inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n            key: function key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              } // clear the active encryption key\n\n\n              if (entry.attributes.METHOD === 'NONE') {\n                _key = null;\n                return;\n              }\n\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n\n              if (entry.attributes.KEYFORMAT === 'com.apple.streamingkeydelivery') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.apple.fps.1_0'] = {\n                  attributes: entry.attributes\n                };\n                return;\n              }\n\n              if (entry.attributes.KEYFORMAT === 'com.microsoft.playready') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.microsoft.playready'] = {\n                  uri: entry.attributes.URI\n                };\n                return;\n              } // check if the content is encrypted for Widevine\n              // Widevine/HLS spec: https://storage.googleapis.com/wvdocs/Widevine_DRM_HLS.pdf\n\n\n              if (entry.attributes.KEYFORMAT === widevineUuid) {\n                var VALID_METHODS = ['SAMPLE-AES', 'SAMPLE-AES-CTR', 'SAMPLE-AES-CENC'];\n\n                if (VALID_METHODS.indexOf(entry.attributes.METHOD) === -1) {\n                  this.trigger('warn', {\n                    message: 'invalid key method provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (entry.attributes.METHOD === 'SAMPLE-AES-CENC') {\n                  this.trigger('warn', {\n                    message: 'SAMPLE-AES-CENC is deprecated, please use SAMPLE-AES-CTR instead'\n                  });\n                }\n\n                if (entry.attributes.URI.substring(0, 23) !== 'data:text/plain;base64,') {\n                  this.trigger('warn', {\n                    message: 'invalid key URI provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (!(entry.attributes.KEYID && entry.attributes.KEYID.substring(0, 2) === '0x')) {\n                  this.trigger('warn', {\n                    message: 'invalid key ID provided for Widevine'\n                  });\n                  return;\n                } // if Widevine key attributes are valid, store them as `contentProtection`\n                // on the manifest to emulate Widevine tag structure in a DASH mpd\n\n\n                this.manifest.contentProtection = this.manifest.contentProtection || {};\n                this.manifest.contentProtection['com.widevine.alpha'] = {\n                  attributes: {\n                    schemeIdUri: entry.attributes.KEYFORMAT,\n                    // remove '0x' from the key id string\n                    keyId: entry.attributes.KEYID.substring(2)\n                  },\n                  // decode the base64-encoded PSSH box\n                  pssh: decodeB64ToUint8Array(entry.attributes.URI.split(',')[1])\n                };\n                return;\n              }\n\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              } // setup an encryption key for upcoming segments\n\n\n              _key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                _key.iv = entry.attributes.IV;\n              }\n            },\n            'media-sequence': function mediaSequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.mediaSequence = entry.number;\n            },\n            'discontinuity-sequence': function discontinuitySequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n            'playlist-type': function playlistType() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n\n              this.manifest.playlistType = entry.playlistType;\n            },\n            map: function map() {\n              currentMap = {};\n\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n\n              if (_key) {\n                currentMap.key = _key;\n              }\n            },\n            'stream-inf': function streamInf() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n\n              _extends(currentUri.attributes, entry.attributes);\n            },\n            media: function media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              } // find the media group, creating defaults as necessary\n\n\n              var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\n\n              rendition = {\n                default: /yes/i.test(entry.attributes.DEFAULT)\n              };\n\n              if (rendition.default) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              } // insert the new rendition\n\n\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n            discontinuity: function discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n            'program-date-time': function programDateTime() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n            },\n            targetduration: function targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.targetDuration = entry.duration;\n              setHoldBack.call(this, this.manifest);\n            },\n            start: function start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n            'cue-out': function cueOut() {\n              currentUri.cueOut = entry.data;\n            },\n            'cue-out-cont': function cueOutCont() {\n              currentUri.cueOutCont = entry.data;\n            },\n            'cue-in': function cueIn() {\n              currentUri.cueIn = entry.data;\n            },\n            'skip': function skip() {\n              this.manifest.skip = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-SKIP', entry.attributes, ['SKIPPED-SEGMENTS']);\n            },\n            'part': function part() {\n              var _this2 = this;\n\n              hasParts = true; // parts are always specifed before a segment\n\n              var segmentIndex = this.manifest.segments.length;\n              var part = camelCaseKeys(entry.attributes);\n              currentUri.parts = currentUri.parts || [];\n              currentUri.parts.push(part);\n\n              if (part.byterange) {\n                if (!part.byterange.hasOwnProperty('offset')) {\n                  part.byterange.offset = lastPartByterangeEnd;\n                }\n\n                lastPartByterangeEnd = part.byterange.offset + part.byterange.length;\n              }\n\n              var partIndex = currentUri.parts.length - 1;\n              this.warnOnMissingAttributes_(\"#EXT-X-PART #\" + partIndex + \" for segment #\" + segmentIndex, entry.attributes, ['URI', 'DURATION']);\n\n              if (this.manifest.renditionReports) {\n                this.manifest.renditionReports.forEach(function (r, i) {\n                  if (!r.hasOwnProperty('lastPart')) {\n                    _this2.trigger('warn', {\n                      message: \"#EXT-X-RENDITION-REPORT #\" + i + \" lacks required attribute(s): LAST-PART\"\n                    });\n                  }\n                });\n              }\n            },\n            'server-control': function serverControl() {\n              var attrs = this.manifest.serverControl = camelCaseKeys(entry.attributes);\n\n              if (!attrs.hasOwnProperty('canBlockReload')) {\n                attrs.canBlockReload = false;\n                this.trigger('info', {\n                  message: '#EXT-X-SERVER-CONTROL defaulting CAN-BLOCK-RELOAD to false'\n                });\n              }\n\n              setHoldBack.call(this, this.manifest);\n\n              if (attrs.canSkipDateranges && !attrs.hasOwnProperty('canSkipUntil')) {\n                this.trigger('warn', {\n                  message: '#EXT-X-SERVER-CONTROL lacks required attribute CAN-SKIP-UNTIL which is required when CAN-SKIP-DATERANGES is set'\n                });\n              }\n            },\n            'preload-hint': function preloadHint() {\n              // parts are always specifed before a segment\n              var segmentIndex = this.manifest.segments.length;\n              var hint = camelCaseKeys(entry.attributes);\n              var isPart = hint.type && hint.type === 'PART';\n              currentUri.preloadHints = currentUri.preloadHints || [];\n              currentUri.preloadHints.push(hint);\n\n              if (hint.byterange) {\n                if (!hint.byterange.hasOwnProperty('offset')) {\n                  // use last part byterange end or zero if not a part.\n                  hint.byterange.offset = isPart ? lastPartByterangeEnd : 0;\n\n                  if (isPart) {\n                    lastPartByterangeEnd = hint.byterange.offset + hint.byterange.length;\n                  }\n                }\n              }\n\n              var index = currentUri.preloadHints.length - 1;\n              this.warnOnMissingAttributes_(\"#EXT-X-PRELOAD-HINT #\" + index + \" for segment #\" + segmentIndex, entry.attributes, ['TYPE', 'URI']);\n\n              if (!hint.type) {\n                return;\n              } // search through all preload hints except for the current one for\n              // a duplicate type.\n\n\n              for (var i = 0; i < currentUri.preloadHints.length - 1; i++) {\n                var otherHint = currentUri.preloadHints[i];\n\n                if (!otherHint.type) {\n                  continue;\n                }\n\n                if (otherHint.type === hint.type) {\n                  this.trigger('warn', {\n                    message: \"#EXT-X-PRELOAD-HINT #\" + index + \" for segment #\" + segmentIndex + \" has the same TYPE \" + hint.type + \" as preload hint #\" + i\n                  });\n                }\n              }\n            },\n            'rendition-report': function renditionReport() {\n              var report = camelCaseKeys(entry.attributes);\n              this.manifest.renditionReports = this.manifest.renditionReports || [];\n              this.manifest.renditionReports.push(report);\n              var index = this.manifest.renditionReports.length - 1;\n              var required = ['LAST-MSN', 'URI'];\n\n              if (hasParts) {\n                required.push('LAST-PART');\n              }\n\n              this.warnOnMissingAttributes_(\"#EXT-X-RENDITION-REPORT #\" + index, entry.attributes, required);\n            },\n            'part-inf': function partInf() {\n              this.manifest.partInf = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-PART-INF', entry.attributes, ['PART-TARGET']);\n\n              if (this.manifest.partInf.partTarget) {\n                this.manifest.partTargetDuration = this.manifest.partInf.partTarget;\n              }\n\n              setHoldBack.call(this, this.manifest);\n            }\n          })[entry.tagType] || noop).call(self);\n        },\n        uri: function uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri); // if no explicit duration was declared, use the target duration\n\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          } // annotate with encryption information, if necessary\n\n\n          if (_key) {\n            currentUri.key = _key;\n          }\n\n          currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\n\n          if (currentMap) {\n            currentUri.map = currentMap;\n          } // reset the last byterange end as it needs to be 0 between parts\n\n\n          lastPartByterangeEnd = 0; // prepare for the next URI\n\n          currentUri = {};\n        },\n        comment: function comment() {// comments are not important for playback\n        },\n        custom: function custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n      })[entry.type].call(self);\n    });\n\n    return _this;\n  }\n\n  var _proto = Parser.prototype;\n\n  _proto.warnOnMissingAttributes_ = function warnOnMissingAttributes_(identifier, attributes, required) {\n    var missing = [];\n    required.forEach(function (key) {\n      if (!attributes.hasOwnProperty(key)) {\n        missing.push(key);\n      }\n    });\n\n    if (missing.length) {\n      this.trigger('warn', {\n        message: identifier + \" lacks required attribute(s): \" + missing.join(', ')\n      });\n    }\n  }\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {string} chunk a potentially incomplete portion of the manifest\n   */\n  ;\n\n  _proto.push = function push(chunk) {\n    this.lineStream.push(chunk);\n  }\n  /**\n   * Flush any remaining input. This can be handy if the last line of an M3U8\n   * manifest did not contain a trailing newline but the file has been\n   * completely received.\n   */\n  ;\n\n  _proto.end = function end() {\n    // flush any buffered input\n    this.lineStream.push('\\n');\n    this.trigger('end');\n  }\n  /**\n   * Add an additional parser for non-standard tags\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.type         the type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n  ;\n\n  _proto.addParser = function addParser(options) {\n    this.parseStream.addParser(options);\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n  ;\n\n  _proto.addTagMapper = function addTagMapper(options) {\n    this.parseStream.addTagMapper(options);\n  };\n\n  return Parser;\n}(Stream);\n\nexport { LineStream, ParseStream, Parser };\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.byteRangeToString = exports.compareByteRanges = exports.getByteRange = void 0;\r\nfunction getByteRange(context) {\r\n    return context.rangeEnd && context.rangeStart !== undefined\r\n        ? { offset: context.rangeStart, length: context.rangeEnd - context.rangeStart }\r\n        : undefined;\r\n}\r\nexports.getByteRange = getByteRange;\r\nfunction compareByteRanges(b1, b2) {\r\n    return b1 === undefined ? b2 === undefined : b2 !== undefined && b1.length === b2.length && b1.offset === b2.offset;\r\n}\r\nexports.compareByteRanges = compareByteRanges;\r\nfunction byteRangeToString(byteRange) {\r\n    if (byteRange === undefined) {\r\n        return undefined;\r\n    }\r\n    const end = byteRange.offset + byteRange.length - 1;\r\n    return `bytes=${byteRange.offset}-${end}`;\r\n}\r\nexports.byteRangeToString = byteRangeToString;\r\n","\"use strict\";\r\n/**\r\n * Copyright 2018 Novage LLC.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Engine = void 0;\r\nconst events_1 = require(\"events\");\r\nconst p2p_media_loader_core_basyton_1 = require(\"p2p-media-loader-core-basyton\");\r\nconst segment_manager_1 = require(\"./segment-manager\");\r\nconst hlsjs_loader_1 = require(\"./hlsjs-loader\");\r\nclass Engine extends events_1.EventEmitter {\r\n    constructor(settings = {}) {\r\n        super();\r\n        this.loader = new p2p_media_loader_core_basyton_1.HybridLoader(settings.loader);\r\n        this.segmentManager = new segment_manager_1.SegmentManager(this.loader, settings.segments, settings.loader);\r\n        Object.keys(p2p_media_loader_core_basyton_1.Events)\r\n            .map((eventKey) => p2p_media_loader_core_basyton_1.Events[eventKey])\r\n            .forEach((event) => this.loader.on(event, (...args) => this.emit(event, ...args)));\r\n    }\r\n    static isSupported() {\r\n        return p2p_media_loader_core_basyton_1.HybridLoader.isSupported();\r\n    }\r\n    createLoaderClass() {\r\n        var _a;\r\n        const engine = this; // eslint-disable-line @typescript-eslint/no-this-alias\r\n        const loader = (_a = class {\r\n                constructor() {\r\n                    this.load = async (context, config, callbacks) => {\r\n                        this.context = context;\r\n                        this.callbacks = callbacks;\r\n                        await this.impl.load(context, config, callbacks);\r\n                    };\r\n                    this.abort = () => {\r\n                        if (this.context) {\r\n                            this.impl.abort(this.context, this.callbacks);\r\n                        }\r\n                    };\r\n                    this.destroy = () => {\r\n                        if (this.context) {\r\n                            this.impl.abort(this.context);\r\n                        }\r\n                    };\r\n                    this.getResponseHeader = () => undefined;\r\n                    this.impl = new hlsjs_loader_1.HlsJsLoader(engine.segmentManager);\r\n                    engine.setLatestLoaderImpl(this);\r\n                    this.stats = this.impl.stats;\r\n                }\r\n            },\r\n            _a.getEngine = () => {\r\n                return engine;\r\n            },\r\n            _a);\r\n        return loader;\r\n    }\r\n    async destroy() {\r\n        await this.segmentManager.destroy();\r\n    }\r\n    abortCurrentRequest() {\r\n        if (this.latestLoaderImpl) {\r\n            this.latestLoaderImpl.abort();\r\n            this.latestLoaderImpl = undefined;\r\n        }\r\n    }\r\n    getSettings() {\r\n        return {\r\n            segments: this.segmentManager.getSettings(),\r\n            loader: this.loader.getSettings(),\r\n        };\r\n    }\r\n    getDetails() {\r\n        return {\r\n            loader: this.loader.getDetails(),\r\n        };\r\n    }\r\n    setPlayingSegment(url, byteRange, start, duration) {\r\n        this.segmentManager.setPlayingSegment(url, byteRange, start, duration);\r\n    }\r\n    setPlayingSegmentByCurrentTime(playheadPosition) {\r\n        this.segmentManager.setPlayingSegmentByCurrentTime(playheadPosition);\r\n    }\r\n    setLatestLoaderImpl(loader) {\r\n        this.latestLoaderImpl = loader;\r\n    }\r\n}\r\nexports.Engine = Engine;\r\n","\"use strict\";\r\n/**\r\n * Copyright 2018 Novage LLC.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.HlsJsLoader = void 0;\r\nconst debug_1 = __importDefault(require(\"debug\"));\r\nconst p2p_media_loader_core_basyton_1 = require(\"p2p-media-loader-core-basyton\");\r\nconst byte_range_1 = require(\"./byte-range\");\r\nclass HlsJsLoader {\r\n    constructor(segmentManager) {\r\n        this.segmentManager = segmentManager;\r\n        this.debug = (0, debug_1.default)(\"p2pml:hlsjs-loader\");\r\n        this.stats = {\r\n            loaded: 0,\r\n            total: 0,\r\n            aborted: false,\r\n            retry: 0,\r\n            chunkCount: 0,\r\n            bwEstimate: 0,\r\n            loading: {\r\n                start: 0,\r\n                end: 0,\r\n                first: 0,\r\n            },\r\n            parsing: {\r\n                start: 0,\r\n                end: 0,\r\n            },\r\n            buffering: {\r\n                start: 0,\r\n                end: 0,\r\n                first: 0,\r\n            },\r\n        };\r\n        this.boundOnSegmentAbort = this.onSegmentAbort.bind(this);\r\n        this.boundOnUpdateSegmentSize = this.onUpdateSegmentSize.bind(this);\r\n        this.boundOnUpdateLoaded = this.onUpdateLoaded.bind(this);\r\n        this.boundOnSegmentStartLoad = this.onSegmentStartLoad.bind(this);\r\n        this.debugId = \"\";\r\n    }\r\n    async load(context, _config, callbacks) {\r\n        this.context = context;\r\n        this.callbacks = callbacks;\r\n        HlsJsLoader.updateStatsToStartLoading(this.stats);\r\n        if (this.context.type) {\r\n            this.debug(`Loading playlist ${this.context.url}.`);\r\n            try {\r\n                const result = await this.segmentManager.loadPlaylist(this.context.url);\r\n                this.debug(`Playlist ${this.context.url} loaded.`);\r\n                this.successPlaylist(result, this.context, this.callbacks);\r\n            }\r\n            catch (e) {\r\n                this.error(e, this.context, this.callbacks);\r\n            }\r\n        }\r\n        else if (this.context.frag) {\r\n            this.loader = this.segmentManager.loader;\r\n            this.byteRange = (0, byte_range_1.getByteRange)(this.context);\r\n            this.debugId = this.byteRange\r\n                ? `${this.context.url} / ${this.byteRange.offset}`\r\n                : this.context.url;\r\n            this.debug(`Loading fragment ${this.debugId}.`);\r\n            // We may be downloading the segment by P2P, so we don\"t care about the stats sent to HLS ABR\r\n            this.interval = setInterval(() => HlsJsLoader.updateStatsToStartLoading(this.stats), 200);\r\n            this.loader.on(p2p_media_loader_core_basyton_1.Events.SegmentAbort, this.boundOnSegmentAbort);\r\n            this.loader.on(p2p_media_loader_core_basyton_1.Events.SegmentSize, this.boundOnUpdateSegmentSize);\r\n            this.loader.on(p2p_media_loader_core_basyton_1.Events.SegmentStartLoad, this.boundOnSegmentStartLoad);\r\n            try {\r\n                const result = await this.segmentManager.loadSegment(this.context.url, this.byteRange);\r\n                const { content } = result;\r\n                if (content) {\r\n                    this.successSegment(content, this.context, this.callbacks);\r\n                    this.debug(`Loaded fragment ${this.debugId}.`);\r\n                }\r\n                else {\r\n                    this.cleanup();\r\n                    this.debug(`Loaded empty fragment ${this.debugId} (aborted?).`);\r\n                }\r\n            }\r\n            catch (e) {\r\n                setTimeout(() => this.error(e, this.context, this.callbacks), 0);\r\n                this.debug(`Error in fragment ${this.debugId} loading.`, e);\r\n            }\r\n        }\r\n        else {\r\n            console.warn(\"Unknown load request\", this.context);\r\n        }\r\n    }\r\n    abort(context, callbacks) {\r\n        if (this.stats.loaded || this.stats.aborted)\r\n            return;\r\n        this.debug(`Aborting by hls.js fragment ${this.debugId} loading.`);\r\n        this.cleanup();\r\n        this.segmentManager.abortSegment(context.url, (0, byte_range_1.getByteRange)(context));\r\n        this.stats.aborted = true;\r\n        const onAbort = callbacks === null || callbacks === void 0 ? void 0 : callbacks.onAbort;\r\n        if (onAbort) {\r\n            onAbort(this.stats, context, undefined);\r\n        }\r\n    }\r\n    successPlaylist(xhr, context, callbacks) {\r\n        this.cleanup();\r\n        const now = performance.now();\r\n        this.stats.loading.end = now;\r\n        this.stats.loaded = xhr.response.length;\r\n        this.stats.total = xhr.response.length;\r\n        callbacks.onSuccess({\r\n            url: xhr.responseURL,\r\n            data: xhr.response,\r\n        }, this.stats, context, undefined);\r\n    }\r\n    successSegment(content, context, callbacks) {\r\n        this.cleanup();\r\n        const now = performance.now();\r\n        this.stats.loading.end = now;\r\n        this.stats.loaded = content.byteLength;\r\n        this.stats.total = content.byteLength;\r\n        if (callbacks.onProgress) {\r\n            callbacks.onProgress(this.stats, context, content, undefined);\r\n        }\r\n        callbacks.onSuccess({\r\n            url: context.url,\r\n            data: content,\r\n        }, this.stats, context, undefined);\r\n    }\r\n    error(error, context, callbacks) {\r\n        this.cleanup();\r\n        callbacks.onError(error, context, undefined);\r\n    }\r\n    cleanup() {\r\n        if (this.interval) {\r\n            clearInterval(this.interval);\r\n            this.interval = undefined;\r\n        }\r\n        if (this.loader) {\r\n            this.loader.off(p2p_media_loader_core_basyton_1.Events.SegmentStartLoad, this.boundOnSegmentStartLoad);\r\n            this.loader.off(p2p_media_loader_core_basyton_1.Events.SegmentSize, this.boundOnUpdateSegmentSize);\r\n            this.loader.off(p2p_media_loader_core_basyton_1.Events.PieceBytesDownloaded, this.boundOnUpdateLoaded);\r\n            this.loader.off(p2p_media_loader_core_basyton_1.Events.SegmentAbort, this.boundOnSegmentAbort);\r\n        }\r\n    }\r\n    onSegmentAbort(segment) {\r\n        var _a;\r\n        if (!this.isSegment(segment))\r\n            return;\r\n        this.debug(`Aborting by p2p-media-loader fragment ${this.debugId || \"\"}.`);\r\n        this.stats.aborted = true;\r\n        const onAbort = (_a = this.callbacks) === null || _a === void 0 ? void 0 : _a.onAbort;\r\n        if (onAbort) {\r\n            onAbort(this.stats, this.context, undefined);\r\n        }\r\n        this.cleanup();\r\n    }\r\n    onUpdateSegmentSize(segment, size) {\r\n        if (!this.isSegment(segment))\r\n            return;\r\n        this.stats.total = size;\r\n    }\r\n    onUpdateLoaded(_type, segment, bytes) {\r\n        if (!this.isSegment(segment))\r\n            return;\r\n        this.stats.loaded += bytes;\r\n    }\r\n    onSegmentStartLoad(method, segment) {\r\n        if (!this.interval || method !== \"http\" || !this.isSegment(segment))\r\n            return;\r\n        clearInterval(this.interval);\r\n        this.interval = undefined;\r\n        HlsJsLoader.updateStatsToStartLoading(this.stats);\r\n        this.loader.on(p2p_media_loader_core_basyton_1.Events.PieceBytesDownloaded, this.boundOnUpdateLoaded);\r\n    }\r\n    ;\r\n    isSegment(segment) {\r\n        return segment.url === this.context.url && segment.range === (0, byte_range_1.byteRangeToString)(this.byteRange);\r\n    }\r\n    static updateStatsToStartLoading(stats) {\r\n        if (stats.aborted)\r\n            return;\r\n        const start = performance.now();\r\n        stats.loading.start = start;\r\n        stats.loading.first = start;\r\n    }\r\n}\r\nexports.HlsJsLoader = HlsJsLoader;\r\n","\"use strict\";\r\n/**\r\n * @license Apache-2.0\r\n * Copyright 2018 Novage LLC.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initJwPlayer = exports.initMediaElementJsPlayer = exports.initVideoJsHlsJsPlugin = exports.initVideoJsContribHlsJsPlayer = exports.initFlowplayerHlsJsPlayer = exports.initClapprPlayer = exports.initHlsJsPlayer = exports.version = void 0;\r\n/* eslint-disable */\r\nexports.version = \"0.6.2\";\r\n__exportStar(require(\"./engine\"), exports);\r\n__exportStar(require(\"./segment-manager\"), exports);\r\nconst debug_1 = __importDefault(require(\"debug\"));\r\nconst debug = (0, debug_1.default)(\"p2pml:hlsjs-init\");\r\nfunction initHlsJsPlayer(player) {\r\n    if (player && player.config && player.config.loader && typeof player.config.loader.getEngine === \"function\") {\r\n        initHlsJsEvents(player, player.config.loader.getEngine());\r\n    }\r\n}\r\nexports.initHlsJsPlayer = initHlsJsPlayer;\r\nfunction initClapprPlayer(player) {\r\n    player.on(\"play\", () => {\r\n        const playback = player.core.getCurrentPlayback();\r\n        if (playback._hls && !playback._hls._p2pm_linitialized) {\r\n            playback._hls._p2pm_linitialized = true;\r\n            initHlsJsPlayer(player.core.getCurrentPlayback()._hls);\r\n        }\r\n    });\r\n}\r\nexports.initClapprPlayer = initClapprPlayer;\r\nfunction initFlowplayerHlsJsPlayer(player) {\r\n    player.on(\"ready\", () => { var _a; return initHlsJsPlayer((_a = player.engine.hlsjs) !== null && _a !== void 0 ? _a : player.engine.hls); });\r\n}\r\nexports.initFlowplayerHlsJsPlayer = initFlowplayerHlsJsPlayer;\r\nfunction initVideoJsContribHlsJsPlayer(player) {\r\n    player.ready(() => {\r\n        const options = player.tech_.options_;\r\n        if (options &&\r\n            options.hlsjsConfig &&\r\n            options.hlsjsConfig.loader &&\r\n            typeof options.hlsjsConfig.loader.getEngine === \"function\") {\r\n            initHlsJsEvents(player.tech_, options.hlsjsConfig.loader.getEngine());\r\n        }\r\n    });\r\n}\r\nexports.initVideoJsContribHlsJsPlayer = initVideoJsContribHlsJsPlayer;\r\nfunction initVideoJsHlsJsPlugin() {\r\n    if (videojs == undefined || videojs.Html5Hlsjs == undefined) {\r\n        return;\r\n    }\r\n    videojs.Html5Hlsjs.addHook(\"beforeinitialize\", (videojsPlayer, hlsjs) => {\r\n        if (hlsjs.config && hlsjs.config.loader && typeof hlsjs.config.loader.getEngine === \"function\") {\r\n            initHlsJsEvents(hlsjs, hlsjs.config.loader.getEngine());\r\n        }\r\n    });\r\n}\r\nexports.initVideoJsHlsJsPlugin = initVideoJsHlsJsPlugin;\r\nfunction initMediaElementJsPlayer(mediaElement) {\r\n    mediaElement.addEventListener(\"hlsFragChanged\", (event) => {\r\n        const hls = mediaElement.hlsPlayer;\r\n        if (hls && hls.config && hls.config.loader && typeof hls.config.loader.getEngine === \"function\") {\r\n            const engine = hls.config.loader.getEngine();\r\n            if (event.data && event.data.length > 1) {\r\n                const frag = event.data[1].frag;\r\n                const byteRange = frag.byteRange.length !== 2\r\n                    ? undefined\r\n                    : { offset: frag.byteRange[0], length: frag.byteRange[1] - frag.byteRange[0] };\r\n                engine.setPlayingSegment(frag.url, byteRange, frag.start, frag.duration);\r\n            }\r\n        }\r\n    });\r\n    mediaElement.addEventListener(\"hlsDestroying\", async () => {\r\n        const hls = mediaElement.hlsPlayer;\r\n        if (hls && hls.config && hls.config.loader && typeof hls.config.loader.getEngine === \"function\") {\r\n            const engine = hls.config.loader.getEngine();\r\n            await engine.destroy();\r\n        }\r\n    });\r\n    mediaElement.addEventListener(\"hlsError\", (event) => {\r\n        const hls = mediaElement.hlsPlayer;\r\n        if (hls && hls.config && hls.config.loader && typeof hls.config.loader.getEngine === \"function\") {\r\n            if (event.data !== undefined && event.data.details === \"bufferStalledError\") {\r\n                const engine = hls.config.loader.getEngine();\r\n                engine.setPlayingSegmentByCurrentTime(hls.media.currentTime);\r\n            }\r\n        }\r\n    });\r\n}\r\nexports.initMediaElementJsPlayer = initMediaElementJsPlayer;\r\nfunction initJwPlayer(player, hlsjsConfig) {\r\n    const iid = setInterval(() => {\r\n        if (player.hls && player.hls.config) {\r\n            clearInterval(iid);\r\n            Object.assign(player.hls.config, hlsjsConfig);\r\n            initHlsJsPlayer(player.hls);\r\n        }\r\n    }, 200);\r\n}\r\nexports.initJwPlayer = initJwPlayer;\r\nfunction initHlsJsEvents(player, engine) {\r\n    player.on(\"hlsFragChanged\", (_event, data) => {\r\n        debug(\"HLS Frag changed.\", data);\r\n        const frag = data.frag;\r\n        const byteRange = frag.byteRange.length !== 2\r\n            ? undefined\r\n            : { offset: frag.byteRange[0], length: frag.byteRange[1] - frag.byteRange[0] };\r\n        engine.setPlayingSegment(frag.url, byteRange, frag.start, frag.duration);\r\n    });\r\n    player.on(\"hlsDestroying\", async () => {\r\n        await engine.destroy();\r\n    });\r\n    player.on(\"hlsError\", (_event, errorData) => {\r\n        if (errorData.details === \"bufferStalledError\") {\r\n            const htmlMediaElement = (player.media === undefined\r\n                ? player.el_ // videojs-contrib-hlsjs\r\n                : player.media); // all others\r\n            if (htmlMediaElement) {\r\n                engine.setPlayingSegmentByCurrentTime(htmlMediaElement.currentTime);\r\n            }\r\n        }\r\n    });\r\n    player.on('seeking', () => {\r\n        debug(\"Player seeking.\");\r\n        // Abort current HTTP/P2P request so HLS is not stuck with a P2P request when moving current video player time\r\n        // to a previously loaded fragment\r\n        engine.abortCurrentRequest();\r\n    });\r\n}\r\n","\"use strict\";\r\n/**\r\n * Copyright 2018 Novage LLC.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SegmentManager = void 0;\r\nconst debug_1 = __importDefault(require(\"debug\"));\r\nconst p2p_media_loader_core_basyton_1 = require(\"p2p-media-loader-core-basyton\");\r\nconst m3u8_parser_1 = require(\"m3u8-parser\");\r\nconst byte_range_1 = require(\"./byte-range\");\r\nconst defaultSettings = {\r\n    forwardSegmentCount: 20,\r\n    swarmId: undefined,\r\n    assetsStorage: undefined,\r\n};\r\nclass SegmentManager {\r\n    constructor(loader, settings = {}, loadersettings = {}) {\r\n        this.debug = (0, debug_1.default)(\"p2pml:segment-manager\");\r\n        this.masterPlaylist = null;\r\n        this.variantPlaylists = new Map();\r\n        this.segmentRequest = null;\r\n        this.fetch = (...args) => fetch(...args);\r\n        this.playQueue = [];\r\n        this.onSegmentLoaded = (segment) => {\r\n            if (this.segmentRequest &&\r\n                this.segmentRequest.segmentUrl === segment.url &&\r\n                (0, byte_range_1.byteRangeToString)(this.segmentRequest.segmentByteRange) === segment.range) {\r\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                this.segmentRequest.onSuccess(segment.data.slice(0), segment.downloadBandwidth);\r\n                this.segmentRequest = null;\r\n            }\r\n        };\r\n        this.onSegmentError = (segment, error) => {\r\n            if (this.segmentRequest &&\r\n                this.segmentRequest.segmentUrl === segment.url &&\r\n                (0, byte_range_1.byteRangeToString)(this.segmentRequest.segmentByteRange) === segment.range) {\r\n                this.segmentRequest.onError(error);\r\n                this.segmentRequest = null;\r\n            }\r\n        };\r\n        this.onSegmentAbort = (segment) => {\r\n            if (this.segmentRequest &&\r\n                this.segmentRequest.segmentUrl === segment.url &&\r\n                (0, byte_range_1.byteRangeToString)(this.segmentRequest.segmentByteRange) === segment.range) {\r\n                this.segmentRequest.onError(\"Loading aborted: internal abort\");\r\n                this.segmentRequest = null;\r\n            }\r\n        };\r\n        this.settings = Object.assign(Object.assign({}, defaultSettings), settings);\r\n        this.loader = loader;\r\n        this.loader.on(p2p_media_loader_core_basyton_1.Events.SegmentLoaded, this.onSegmentLoaded);\r\n        this.loader.on(p2p_media_loader_core_basyton_1.Events.SegmentError, this.onSegmentError);\r\n        this.loader.on(p2p_media_loader_core_basyton_1.Events.SegmentAbort, this.onSegmentAbort);\r\n        if (loadersettings.localTransport) {\r\n            this.fetch = loadersettings.localTransport;\r\n        }\r\n    }\r\n    getSettings() {\r\n        return this.settings;\r\n    }\r\n    processPlaylist(requestUrl, content, responseUrl) {\r\n        const parser = new m3u8_parser_1.Parser();\r\n        parser.push(content);\r\n        parser.end();\r\n        const playlist = new Playlist(requestUrl, responseUrl, parser.manifest);\r\n        if (playlist.manifest.playlists) {\r\n            this.masterPlaylist = playlist;\r\n            for (const [key, variantPlaylist] of this.variantPlaylists) {\r\n                const { streamSwarmId, found, index } = this.getStreamSwarmId(variantPlaylist.requestUrl);\r\n                if (!found) {\r\n                    this.variantPlaylists.delete(key);\r\n                }\r\n                else {\r\n                    variantPlaylist.streamSwarmId = streamSwarmId;\r\n                    variantPlaylist.streamId = \"V\" + index.toString();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            const { streamSwarmId, found, index } = this.getStreamSwarmId(requestUrl);\r\n            if (found || this.masterPlaylist === null) {\r\n                // do not add audio and subtitles to variants\r\n                playlist.streamSwarmId = streamSwarmId;\r\n                playlist.streamId = this.masterPlaylist === null ? undefined : \"V\" + index.toString();\r\n                this.variantPlaylists.set(requestUrl, playlist);\r\n                this.updateSegments();\r\n            }\r\n        }\r\n    }\r\n    async loadPlaylist(url) {\r\n        const assetsStorage = this.settings.assetsStorage;\r\n        let xhr;\r\n        if (assetsStorage !== undefined) {\r\n            let masterSwarmId;\r\n            masterSwarmId = this.getMasterSwarmId();\r\n            if (masterSwarmId === undefined) {\r\n                masterSwarmId = url.split(\"?\")[0];\r\n            }\r\n            const asset = await assetsStorage.getAsset(url, undefined, masterSwarmId);\r\n            if (asset !== undefined) {\r\n                xhr = {\r\n                    responseURL: asset.responseUri,\r\n                    response: asset.data,\r\n                };\r\n            }\r\n            else {\r\n                const fetch = await this.loadContent(url);\r\n                xhr = {\r\n                    responseURL: fetch.url,\r\n                    response: await fetch.text(),\r\n                };\r\n                void assetsStorage.storeAsset({\r\n                    masterManifestUri: this.masterPlaylist !== null ? this.masterPlaylist.requestUrl : url,\r\n                    masterSwarmId: masterSwarmId,\r\n                    requestUri: url,\r\n                    responseUri: xhr.responseURL,\r\n                    data: xhr.response,\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            const fetch = await this.loadContent(url);\r\n            xhr = {\r\n                responseURL: fetch.url,\r\n                response: await fetch.text(),\r\n            };\r\n        }\r\n        this.processPlaylist(url, xhr.response, xhr.responseURL);\r\n        return xhr;\r\n    }\r\n    async loadSegment(url, byteRange) {\r\n        var _a;\r\n        const segmentLocation = this.getSegmentLocation(url, byteRange);\r\n        const byteRangeString = (0, byte_range_1.byteRangeToString)(byteRange);\r\n        if (!segmentLocation) {\r\n            let content;\r\n            // Not a segment from variants; usually can be: init, audio or subtitles segment, encryption key etc.\r\n            const assetsStorage = this.settings.assetsStorage;\r\n            if (assetsStorage !== undefined) {\r\n                let masterManifestUri = (_a = this.masterPlaylist) === null || _a === void 0 ? void 0 : _a.requestUrl;\r\n                let masterSwarmId;\r\n                masterSwarmId = this.getMasterSwarmId();\r\n                if (masterSwarmId === undefined && this.variantPlaylists.size === 1) {\r\n                    const result = this.variantPlaylists.values().next();\r\n                    if (!result.done) {\r\n                        // always true\r\n                        masterSwarmId = result.value.requestUrl.split(\"?\")[0];\r\n                    }\r\n                }\r\n                if (masterManifestUri === undefined && this.variantPlaylists.size === 1) {\r\n                    const result = this.variantPlaylists.values().next();\r\n                    if (!result.done) {\r\n                        // always true\r\n                        masterManifestUri = result.value.requestUrl;\r\n                    }\r\n                }\r\n                if (masterSwarmId !== undefined && masterManifestUri !== undefined) {\r\n                    const asset = await assetsStorage.getAsset(url, byteRangeString, masterSwarmId);\r\n                    if (asset !== undefined) {\r\n                        content = asset.data;\r\n                    }\r\n                    else {\r\n                        const fetch = await this.loadContent(url, byteRangeString);\r\n                        content = await fetch.arrayBuffer();\r\n                        void assetsStorage.storeAsset({\r\n                            masterManifestUri: masterManifestUri,\r\n                            masterSwarmId: masterSwarmId,\r\n                            requestUri: url,\r\n                            requestRange: byteRangeString,\r\n                            responseUri: fetch.url,\r\n                            data: content,\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            if (content === undefined) {\r\n                const fetch = await this.loadContent(url, byteRangeString);\r\n                content = await fetch.arrayBuffer();\r\n            }\r\n            return { content, downloadBandwidth: 0 };\r\n        }\r\n        const segmentSequence = (segmentLocation.playlist.manifest.mediaSequence ? segmentLocation.playlist.manifest.mediaSequence : 0) +\r\n            segmentLocation.segmentIndex;\r\n        if (this.playQueue.length > 0) {\r\n            const previousSegment = this.playQueue[this.playQueue.length - 1];\r\n            if (previousSegment.segmentSequence !== segmentSequence - 1) {\r\n                // Reset play queue in case of segment loading out of sequence\r\n                this.playQueue = [];\r\n            }\r\n        }\r\n        if (this.segmentRequest) {\r\n            this.segmentRequest.onError(\"Cancel segment request: simultaneous segment requests are not supported\");\r\n        }\r\n        const promise = new Promise((resolve, reject) => {\r\n            this.segmentRequest = new SegmentRequest(url, byteRange, segmentSequence, segmentLocation.playlist.requestUrl, (content, downloadBandwidth) => resolve({ content, downloadBandwidth }), (error) => reject(error));\r\n        });\r\n        this.playQueue.push({ segmentUrl: url, segmentByteRange: byteRange, segmentSequence: segmentSequence });\r\n        void this.loadSegments(segmentLocation.playlist, segmentLocation.segmentIndex, true);\r\n        return promise;\r\n    }\r\n    setPlayingSegment(url, byteRange, start, duration) {\r\n        const urlIndex = this.playQueue.findIndex((segment) => segment.segmentUrl === url && (0, byte_range_1.compareByteRanges)(segment.segmentByteRange, byteRange));\r\n        this.debug(\"Set playing segment to index %d\", urlIndex, this.playQueue);\r\n        if (urlIndex >= 0) {\r\n            this.playQueue = this.playQueue.slice(urlIndex);\r\n            this.playQueue[0].playPosition = { start, duration };\r\n            this.updateSegments();\r\n        }\r\n    }\r\n    setPlayingSegmentByCurrentTime(playheadPosition) {\r\n        if (this.playQueue.length === 0 || !this.playQueue[0].playPosition) {\r\n            return;\r\n        }\r\n        const currentSegmentPosition = this.playQueue[0].playPosition;\r\n        const segmentEndTime = currentSegmentPosition.start + currentSegmentPosition.duration;\r\n        if (segmentEndTime - playheadPosition < 0.2) {\r\n            // means that current segment is (almost) finished playing\r\n            // remove it from queue\r\n            this.playQueue = this.playQueue.slice(1);\r\n            this.updateSegments();\r\n        }\r\n    }\r\n    abortSegment(url, byteRange) {\r\n        if (this.segmentRequest &&\r\n            this.segmentRequest.segmentUrl === url &&\r\n            (0, byte_range_1.compareByteRanges)(this.segmentRequest.segmentByteRange, byteRange)) {\r\n            this.segmentRequest.onSuccess(undefined, 0);\r\n            this.segmentRequest = null;\r\n        }\r\n    }\r\n    abortCurrentSegment() {\r\n        if (!this.segmentRequest)\r\n            return;\r\n        this.segmentRequest.onSuccess(undefined, 0);\r\n        this.segmentRequest = null;\r\n    }\r\n    async destroy() {\r\n        if (this.segmentRequest) {\r\n            this.segmentRequest.onError(\"Loading aborted: object destroyed\");\r\n            this.segmentRequest = null;\r\n        }\r\n        this.masterPlaylist = null;\r\n        this.variantPlaylists.clear();\r\n        this.playQueue = [];\r\n        if (this.settings.assetsStorage !== undefined) {\r\n            await this.settings.assetsStorage.destroy();\r\n        }\r\n        await this.loader.destroy();\r\n    }\r\n    updateSegments() {\r\n        if (!this.segmentRequest) {\r\n            return;\r\n        }\r\n        const segmentLocation = this.getSegmentLocation(this.segmentRequest.segmentUrl, this.segmentRequest.segmentByteRange);\r\n        this.debug(\"update segments\", segmentLocation);\r\n        if (segmentLocation) {\r\n            void this.loadSegments(segmentLocation.playlist, segmentLocation.segmentIndex, false);\r\n        }\r\n    }\r\n    getSegmentLocation(url, byteRange) {\r\n        for (const playlist of this.variantPlaylists.values()) {\r\n            const segmentIndex = playlist.getSegmentIndex(url, byteRange);\r\n            if (segmentIndex >= 0) {\r\n                return { playlist: playlist, segmentIndex: segmentIndex };\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    async loadSegments(playlist, segmentIndex, requestFirstSegment) {\r\n        var _a;\r\n        const segments = [];\r\n        const playlistSegments = playlist.manifest.segments;\r\n        const initialSequence = (_a = playlist.manifest.mediaSequence) !== null && _a !== void 0 ? _a : 0;\r\n        let loadSegmentId = null;\r\n        let priority = Math.max(0, this.playQueue.length - 1);\r\n        const masterSwarmId = this.getMasterSwarmId();\r\n        this.debug(\"load segments\", priority, segmentIndex);\r\n        for (let i = segmentIndex; i < playlistSegments.length && segments.length < this.settings.forwardSegmentCount; ++i) {\r\n            const segment = playlist.manifest.segments[i];\r\n            const url = playlist.getSegmentAbsoluteUrl(segment.uri);\r\n            const byteRange = segment.byterange;\r\n            const id = this.getSegmentId(playlist, initialSequence + i);\r\n            segments.push({\r\n                id: id,\r\n                url: url,\r\n                masterSwarmId: masterSwarmId !== undefined ? masterSwarmId : playlist.streamSwarmId,\r\n                masterManifestUri: this.masterPlaylist !== null ? this.masterPlaylist.requestUrl : playlist.requestUrl,\r\n                streamId: playlist.streamId,\r\n                sequence: (initialSequence + i).toString(),\r\n                range: (0, byte_range_1.byteRangeToString)(byteRange),\r\n                priority: priority++,\r\n            });\r\n            if (requestFirstSegment && !loadSegmentId) {\r\n                loadSegmentId = id;\r\n            }\r\n        }\r\n        this.loader.load(segments, playlist.streamSwarmId);\r\n        if (loadSegmentId) {\r\n            const segment = await this.loader.getSegment(loadSegmentId);\r\n            if (segment) {\r\n                // Segment already loaded by loader\r\n                this.onSegmentLoaded(segment);\r\n            }\r\n        }\r\n    }\r\n    getSegmentId(playlist, segmentSequence) {\r\n        return `${playlist.streamSwarmId}+${segmentSequence}`;\r\n    }\r\n    getMasterSwarmId() {\r\n        const settingsSwarmId = this.settings.swarmId && this.settings.swarmId.length !== 0 ? this.settings.swarmId : undefined;\r\n        if (settingsSwarmId !== undefined) {\r\n            return settingsSwarmId;\r\n        }\r\n        return this.masterPlaylist !== null ? this.masterPlaylist.requestUrl.split(\"?\")[0] : undefined;\r\n    }\r\n    getStreamSwarmId(playlistUrl) {\r\n        const masterSwarmId = this.getMasterSwarmId();\r\n        if (this.masterPlaylist && this.masterPlaylist.manifest.playlists && masterSwarmId) {\r\n            for (let i = 0; i < this.masterPlaylist.manifest.playlists.length; ++i) {\r\n                const url = new URL(this.masterPlaylist.manifest.playlists[i].uri, this.masterPlaylist.responseUrl).toString();\r\n                if (url === playlistUrl) {\r\n                    return { streamSwarmId: `${masterSwarmId}+V${i}`, found: true, index: i };\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            streamSwarmId: masterSwarmId !== null && masterSwarmId !== void 0 ? masterSwarmId : playlistUrl.split(\"?\")[0],\r\n            found: false,\r\n            index: -1,\r\n        };\r\n    }\r\n    async loadContent(url, range) {\r\n        const headers = new Headers();\r\n        if (range) {\r\n            headers.append('Range', range);\r\n        }\r\n        return this.fetch(url, { headers });\r\n    }\r\n}\r\nexports.SegmentManager = SegmentManager;\r\nclass Playlist {\r\n    constructor(requestUrl, responseUrl, manifest) {\r\n        this.requestUrl = requestUrl;\r\n        this.responseUrl = responseUrl;\r\n        this.manifest = manifest;\r\n        this.streamSwarmId = \"\";\r\n    }\r\n    getSegmentIndex(url, byteRange) {\r\n        for (let i = 0; i < this.manifest.segments.length; ++i) {\r\n            const segment = this.manifest.segments[i];\r\n            const segmentUrl = this.getSegmentAbsoluteUrl(segment.uri);\r\n            if (url === segmentUrl && (0, byte_range_1.compareByteRanges)(segment.byterange, byteRange)) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    getSegmentAbsoluteUrl(segmentUrl) {\r\n        return new URL(segmentUrl, this.responseUrl).toString();\r\n    }\r\n}\r\nclass SegmentRequest {\r\n    constructor(segmentUrl, segmentByteRange, segmentSequence, playlistRequestUrl, onSuccess, onError) {\r\n        this.segmentUrl = segmentUrl;\r\n        this.segmentByteRange = segmentByteRange;\r\n        this.segmentSequence = segmentSequence;\r\n        this.playlistRequestUrl = playlistRequestUrl;\r\n        this.onSuccess = onSuccess;\r\n        this.onError = onError;\r\n    }\r\n}\r\n"],"names":["_setPrototypeOf","o","p","Object","setPrototypeOf","bind","__proto__","_inheritsLoose","subClass","superClass","prototype","create","constructor","Stream","this","listeners","_proto","on","type","listener","push","off","index","indexOf","slice","splice","trigger","callbacks","arguments","length","i","call","args","Array","_length","_i","apply","dispose","pipe","destination","data","_extends","assign","target","source","key","hasOwnProperty","decodeB64ToUint8Array","b64Text","s","decodedString","window","Buffer","from","toString","array","Uint8Array","charCodeAt","LineStream","_Stream","_this","buffer","nextNewline","substring","TAB","String","fromCharCode","parseByterange","byterangeString","match","exec","result","parseInt","offset","parseAttributes","attributes","attr","attrs","split","RegExp","replace","ParseStream","customParsers","tagMappers","line","event","_this2","trim","reduce","acc","mapper","mappedLine","concat","forEach","newLine","tagType","duration","parseFloat","title","version","number","playlistType","allowed","test","URI","uri","BYTERANGE","byterange","RESOLUTION","resolution","width","height","BANDWIDTH","dateTimeString","dateTimeObject","Date","IV","toLowerCase","Uint32Array","PRECISE","subkey","text","addParser","_ref","_this3","expression","customType","dataParser","segment","addTagMapper","_ref2","map","camelCaseKeys","keys","str","a","toUpperCase","setHoldBack","manifest","serverControl","targetDuration","partTargetDuration","tag","hb","phb","minTargetDuration","minPartDuration","message","Parser","lineStream","parseStream","currentMap","_key","self","ReferenceError","_assertThisInitialized","uris","currentUri","hasParts","noop","defaultMediaGroups","currentTimeline","allowCache","discontinuityStarts","segments","lastByterangeEnd","lastPartByterangeEnd","parts","preloadHints","timeline","preloadSegment","entry","mediaGroup","rendition","endlist","endList","inf","mediaSequence","discontinuitySequence","METHOD","KEYFORMAT","contentProtection","KEYID","schemeIdUri","keyId","pssh","method","iv","isFinite","playlist","playlists","mediaGroups","media","TYPE","NAME","mediaGroupType","default","DEFAULT","autoselect","AUTOSELECT","LANGUAGE","language","instreamId","CHARACTERISTICS","characteristics","FORCED","forced","discontinuity","targetduration","start","isNaN","timeOffset","precise","cueOut","cueOutCont","cueIn","skip","warnOnMissingAttributes_","segmentIndex","part","renditionReports","r","canBlockReload","canSkipDateranges","hint","isPart","otherHint","report","required","partInf","partTarget","comment","custom","identifier","missing","join","chunk","end","options","defineProperty","exports","value","byteRangeToString","compareByteRanges","getByteRange","context","rangeEnd","undefined","rangeStart","b1","b2","byteRange","Engine","events_1","require","p2p_media_loader_core_basyton_1","segment_manager_1","hlsjs_loader_1","settings","loader","HybridLoader","segmentManager","SegmentManager","Events","eventKey","emit","_a","engine","load","async","config","impl","abort","destroy","getResponseHeader","HlsJsLoader","setLatestLoaderImpl","stats","getEngine","latestLoaderImpl","getSettings","getDetails","url","setPlayingSegment","playheadPosition","setPlayingSegmentByCurrentTime","isSupported","EventEmitter","__importDefault","mod","__esModule","debug_1","byte_range_1","debug","loaded","total","aborted","retry","chunkCount","bwEstimate","loading","first","parsing","buffering","boundOnSegmentAbort","onSegmentAbort","boundOnUpdateSegmentSize","onUpdateSegmentSize","boundOnUpdateLoaded","onUpdateLoaded","boundOnSegmentStartLoad","onSegmentStartLoad","debugId","performance","now","_config","updateStatsToStartLoading","loadPlaylist","successPlaylist","e","error","frag","interval","setInterval","SegmentAbort","SegmentSize","SegmentStartLoad","loadSegment","content","successSegment","cleanup","setTimeout","console","warn","abortSegment","onAbort","xhr","response","onSuccess","responseURL","byteLength","onProgress","onError","clearInterval","PieceBytesDownloaded","isSegment","size","_type","bytes","range","__createBinding","m","k","k2","desc","getOwnPropertyDescriptor","writable","configurable","enumerable","get","__exportStar","initJwPlayer","initMediaElementJsPlayer","initVideoJsHlsJsPlugin","initVideoJsContribHlsJsPlayer","initFlowplayerHlsJsPlayer","initClapprPlayer","initHlsJsPlayer","player","initHlsJsEvents","_event","errorData","details","htmlMediaElement","el_","currentTime","abortCurrentRequest","playback","core","getCurrentPlayback","_hls","_p2pm_linitialized","hlsjs","hls","ready","tech_","options_","hlsjsConfig","videojs","Html5Hlsjs","addHook","videojsPlayer","mediaElement","addEventListener","hlsPlayer","iid","m3u8_parser_1","defaultSettings","forwardSegmentCount","swarmId","assetsStorage","loadersettings","masterPlaylist","variantPlaylists","Map","segmentRequest","fetch","playQueue","onSegmentLoaded","segmentUrl","segmentByteRange","downloadBandwidth","onSegmentError","SegmentLoaded","SegmentError","localTransport","requestUrl","responseUrl","parser","Playlist","variantPlaylist","streamSwarmId","found","getStreamSwarmId","streamId","delete","set","updateSegments","masterSwarmId","getMasterSwarmId","asset","getAsset","responseUri","loadContent","storeAsset","masterManifestUri","requestUri","processPlaylist","segmentLocation","getSegmentLocation","byteRangeString","values","next","done","arrayBuffer","requestRange","segmentSequence","promise","Promise","resolve","reject","SegmentRequest","loadSegments","urlIndex","findIndex","playPosition","currentSegmentPosition","clear","getSegmentIndex","requestFirstSegment","playlistSegments","initialSequence","loadSegmentId","priority","Math","max","getSegmentAbsoluteUrl","id","getSegmentId","sequence","getSegment","settingsSwarmId","playlistUrl","URL","headers","Headers","append","playlistRequestUrl"],"sourceRoot":""}